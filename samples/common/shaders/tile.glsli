#ifndef TILE_GLSLI
#define TILE_GLSLI

#include "camera.glsli"
#include "light.glsli"

#ifndef TILE_MAX_LIGHT_COUNT
#define TILE_MAX_LIGHT_COUNT 200
#endif

#ifndef MAX_TILE_COUNT
#define MAX_TILE_COUNT 8100
#endif

#ifndef MAX_LIGHT_INDEX_COUNT
#define MAX_LIGHT_INDEX_COUNT MAX_TILE_COUNT * TILE_MAX_LIGHT_COUNT
#endif

struct TileLighting
{
    ivec4 lightCount;
    vec4  padding;
    Light lights[TILE_MAX_LIGHT_COUNT];
};

struct Screen 
{
    // (resolution_x, resolution_y, 1 / resolution_x, 1 / resolution_y)
    vec4  resolution;
    // (tile_count_x, tile_count_y, 1 / tile_count_x, 1 / tile_count_y)
    vec4  tileCount;
};

int GetTileIdx(Screen screen, vec2 uv)
{
    // uv.y = 1 - uv.y;
	int x_tile_idx = int(uv.x * screen.tileCount.x);
	int y_tile_idx = int(uv.y * screen.tileCount.y);

	return y_tile_idx * int(screen.tileCount.x) + x_tile_idx;
}

struct LightGrid
{
    // (start, count) of lights in tile 
    uvec2 grid[MAX_TILE_COUNT];
};

struct LightIndexBuffer
{
    uint indices[MAX_LIGHT_INDEX_COUNT];
};


#endif
